---
layout: post
title: "CS673-2"
date: 2018-08-29 
description: "Recursion"
tag: CS673
--- 

## Power of Three
```java
  public boolean isPowerOfThree(int n) {
        if (n <= 0) return false;
        if (n == 1) return true;
        if (n % 3 == 0) return isPowerOfThree(n / 3);
        return false;
    }
```

* Recurrence Relation:
* Substitution method:

## Sum


```java
  
  public int sum(int n) {
    if (n <= 1) return 1;
    return sum(n - 1) + n;
  }
```

* Recurrence Relation:
* Substitution method:

## Ω , O, θ (asymptotic notation)
* O: Big O notation is a mathematical notation that describes the limiting behavior of a function when the argument tends towards a particular value or infinity. 
* Ω: {\displaystyle f\in \Omega (g)\,\!} means that the function {\displaystyle f\,\!} f\,\! dominates {\displaystyle g\,\!} g\,\! in some limit, see Big O notation. In this context {\displaystyle \Omega } \Omega  is referred to as a lower bound.
* θ: 

* Tips:
  θ(n) = O(n) && Ω(n)
  Online latex editor: https://www.overleaf.com/
  Grahing: http://wolfram.com/
